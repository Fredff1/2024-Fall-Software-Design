@startuml !

title Design Model




class Equipment{
    - id:int
    - name:Sting
    - position:Position
    - purchaseDate:Date
    - expirationTime:Date
    - description:String
    + getInfo()
    + getTaskHistory()
    + getPlan()
    + updateInfo()
    + addRepairRequest()
    
}



Equipment "1" -right-- "1"  EquipmentType: has


Equipment "1" -left-- "1"  InspectionPlan: has

Equipment "1" -right-- "1..*"  Fault: has




'员工持有角色，而不是继承,可以不放角色模型‘
'role-based access control'
'删了Person就可以'
'RepairRequest可以继承，代表发起人'
'设备目前只能查到巡检的报修，还要能关联到上一个模型相关的报修-》如何管理'

enum EquipmentType{
    实现为运行时枚举
    可由用户添加新类
    ELEVATOR
    FIRE_SAFETY
    LIGHTING
    WATER_SUPPLY
    OTHER
}

class InspectionPlan{
    - cycle:Cycle
    - content:String
    - delay:Delay
    + setDelay()
    + adjustTask()
    + calculateNextInspectionDate()
    + adjustCycle()
}



InspectionPlan "1" -- "1..*"  WorkType: has

InspectionTask "1" -left-- "1..*"  Dispatcher: dispatch
InspectionPlan "1" -down-- "1..*"  InspectionTask: has


InspectionLog "1"-right--..>RepairManager: <<uses>> optional call





class RepairManager{
    同报修模型
}




InspectionTask "1" -- "0..1" InspectionLog



class InspectionTask{
    - id:int
    - time:Date
    - description:String
    - status:TaskStatus
    + generateLog()
    + getLog()
    + generateRepairRequest()
    + changeStatus():void
}

class InspectionLog{
    - time:Date
    - description:String
    + getResult()
    + getTask()
    + linkToTask(task)
    + generateRepairTask(manager,equipment, description): RepairTask
}

InspectionLog "1" -- "1..*"  Fault: generate

Fault "1"-up--..>RepairManager: used in



class Fault {
    - id: int
    - detectedTime: Date
    - description: String
    - severity: Severity
    - repairTask:RepairTask
    - status: FaultStatus
}









enum InspectionResult{
    实现为运行时枚举
    可由用户添加新类
    包含复杂信息
    + info: InspectionInfo
    NORMAL
    NEED_REPAIR
    OTHER
}

InspectionLog "1"-left--"1" InspectionResult

enum WorkType{
    实现为运行时枚举
    可由用户添加新类
    WATER_POWER
    COMMUNICATIONS
    FIRE_SAFETY
    LIGHTING
    SECURITY
    ENVIRONMENTAL
}



class Dispatcher{
    - id:int
    + assignTask()
    + getInspectorRecommendation()
}




class Inspector{
    - id:int
    - schedule:getSchedule
    - workHistory
    + executeTask()
    + submitResult()
    + getSchedule()
    + getWorkHistory()
}

'Inspector "1" -- "1..*" WorkType'

InspectionTask "1"-right-- "1" Inspector



Inspector "1"-left-- "1..*" WorkType




@enduml